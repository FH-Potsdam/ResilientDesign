describe("Primitives creation",function(){var e;beforeEach(function(){e=Snap(100,100)});afterEach(function(){e.remove()});it("creates a circle",function(){var t=e.circle(10,20,30),n=document.querySelector("circle");expect(n).to.not.be(null);expect(n.getAttribute("cx")).to.be("10");expect(n.getAttribute("cy")).to.be("20");expect(n.getAttribute("r")).to.be("30")});it("creates a rect",function(){var t=e.rect(10,20,30,40,5),n=document.querySelector("rect");expect(n).to.not.be(null);expect(n.getAttribute("x")).to.be("10");expect(n.getAttribute("y")).to.be("20");expect(n.getAttribute("width")).to.be("30");expect(n.getAttribute("height")).to.be("40");expect(n.getAttribute("rx")).to.be("5");expect(n.getAttribute("ry")).to.be("5")});it("creates a rect with different rx & ry",function(){var t=e.rect(10,20,30,40,5,6),n=document.querySelector("rect");expect(n).to.not.be(null);expect(n.getAttribute("x")).to.be("10");expect(n.getAttribute("y")).to.be("20");expect(n.getAttribute("width")).to.be("30");expect(n.getAttribute("height")).to.be("40");expect(n.getAttribute("rx")).to.be("5");expect(n.getAttribute("ry")).to.be("6")});it("creates a ellipse",function(){var t=e.ellipse(10,20,30,40),n=document.querySelector("ellipse");expect(n).to.not.be(null);expect(n.getAttribute("cx")).to.be("10");expect(n.getAttribute("cy")).to.be("20");expect(n.getAttribute("rx")).to.be("30");expect(n.getAttribute("ry")).to.be("40")});it("creates a ellipse",function(){var t=e.ellipse(10,20,30,40),n=document.querySelector("ellipse");expect(n).to.not.be(null);expect(n.getAttribute("cx")).to.be("10");expect(n.getAttribute("cy")).to.be("20");expect(n.getAttribute("rx")).to.be("30");expect(n.getAttribute("ry")).to.be("40")});it("creates a path",function(){var t=e.path("M10,10,50,60"),n=document.querySelector("path");expect(n).to.not.be(null);expect(n.getAttribute("d")).to.be("M10,10,50,60");expect(n.getBBox().width).to.be(40)});it("creates a line",function(){var t=e.line(10,10,50,60),n=document.querySelector("line");expect(n).to.not.be(null);expect(n.getAttribute("x1")).to.be("10");expect(n.getBBox().width).to.be(40)});it("creates a polyline",function(){var t=e.polyline(10,10,50,60,70,80),n=document.querySelector("polyline");expect(n).to.not.be(null);expect(n.getAttribute("points")).to.be("10,10,50,60,70,80")});it("creates a polygon",function(){var t=e.polygon(10,10,50,60,70,80),n=document.querySelector("polygon");expect(n).to.not.be(null);expect(n.getAttribute("points")).to.be("10,10,50,60,70,80")});it("creates a group",function(){var t=e.group(),n=document.querySelector("g");expect(n).to.not.be(null)});it("creates and fills a group",function(){var t=e.group(),n=e.circle(10,10,10),r=e.circle(20,20,10),i=document.querySelector("g");t.add(n,r);expect(i).to.not.be(null);expect(i.childNodes.length).to.be(2)});it("creates and fills a group on creation",function(){var t=e.circle(10,10,10),n=e.circle(20,10,10),r=e.g(t,n),i=document.querySelector("g");expect(i).to.not.be(null);expect(i.childNodes.length).to.be(2)});it("creates a text",function(){var t=e.text(10,10,"test"),n=document.querySelector("text");expect(n).to.not.be(null);expect(n.getAttribute("x")).to.be("10");expect(n.textContent).to.be("test")});it("creates a mask",function(){var t=e.mask(),n=document.querySelector("mask");expect(n).to.not.be(null);expect(n).to.be(t.node)});it("creates a pattern",function(){var t=e.ptrn(),n=document.querySelector("pattern");expect(n).to.not.be(null);expect(n).to.be(t.node)});it("creates a pattern(x, y)",function(){var t=e.ptrn(100,200);expect(t.node.nodeName).to.be("pattern");expect(t.node.x.baseVal.value).to.be(100);expect(t.node.y.baseVal.value).to.be(200);expect(t.node.parentNode).to.be(e.node)});it("creates a pattern(x, y, w, h, viewbox)",function(){var t=e.ptrn(100,200,300,400,10,20,30,40);expect(t.node.nodeName).to.be("pattern");expect(t.node.x.baseVal.value).to.be(100);expect(t.node.y.baseVal.value).to.be(200);expect(t.node.width.baseVal.value).to.be(300);expect(t.node.height.baseVal.value).to.be(400);expect(t.node.getAttribute("viewBox")).to.be("10 20 30 40");expect(t.node.parentNode).to.be(e.node)})});